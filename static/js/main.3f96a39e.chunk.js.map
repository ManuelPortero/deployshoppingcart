{"version":3,"sources":["util.js","components/Products.js","components/Filter.js","components/Basket.js","App.js","serviceWorker.js","index.js"],"names":["num","Number","toFixed","toLocaleString","Products","productItems","this","props","products","map","product","className","key","id","href","onClick","e","handleAddToCard","src","sku","alt","title","util","price","handleAddToCart","Component","Filter","count","value","sort","onChange","handleChangeSort","size","handleChangeSize","Basket","cartItems","length","item","handleRemoveFromCart","App","state","filteredProducts","bind","fetch","then","res","json","data","setState","localStorage","getItem","JSON","parse","target","listProducts","filter","elm","setItem","a","b","availableSizes","indexOf","toUpperCase","productAlreadyInCart","forEach","push","stringify","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3f96a39e.chunk.js","sourcesContent":["export default {\n    formatCurrency: function(num){\n        return Number(num.toFixed(1)).toLocaleString()+ ' $';\n    }\n}\n","import React, { Component } from 'react';\nimport util from '../util';\nexport default class Products extends Component {\n    render() {\n           const productItems = this.props.products.map( product => (\n               <div className=\"col-md-4\" key={product.id}>\n                <div className=\"thumbnail text-center\">\n\n                 <a href={`#${product.id}`} onClick={(e)=>this.props.handleAddToCard(e, product)}>\n                    <img src={`/products/${product.sku}_2.jpg`} alt={product.title}/>\n                 </a>\n                    <p>\n                        {product.title}\n                    </p>\n\n                    <div>\n                        <b>{util.formatCurrency(product.price)}</b>\n                        <br/>\n                        <button className=\"btn btn-primary\"\n                        onClick={(e)=>this.props.handleAddToCart(e, product)}>Add To Cart </button>\n                    </div>\n                </div>\n               </div>\n           )\n\n           )\n        return (\n            <div>\n                {productItems}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Filter extends Component {\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-md-4\">\n                    {this.props.count} products found.\n                </div>\n                <div className=\"col-md-4\">\n                 <label>\n                     Order by\n                     <select className= \"form-control\" value={this.props.sort} \n                     onChange={this.props.handleChangeSort}>\n                         <option value=\"\">Select</option>\n                         <option value=\"lowest\">lowest to highest</option>\n                         <option value=\"highest\">highest to lowest</option>\n                     </select>\n                 </label>\n\n                </div>\n                <div className=\"col-md-4\">\n                <label>\n                     Filter Size\n                     <select className= \"form-control\" value={this.props.size} \n                     onChange={this.props.handleChangeSize}>\n                         <option value=\"\">ALL</option>\n                         <option value=\"x\">XS</option>\n                         <option value=\"s\">S</option>\n                         <option value=\"m\">M</option>\n                         <option value=\"l\">L</option>\n                         <option value=\"xl\">XL</option>\n                         <option value=\"xxl\">XXL</option>\n\n                     </select>\n                 </label>\n                </div>\n                \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Basket extends Component {\n    render() {\n        const {cartItems} =this.props; \n\n        return (\n            <div className=\"alert alert-success\">\n                {cartItems.length === 0? \" Basket is empty\": <div> You have {cartItems.length} products in the basket </div>}\n                {cartItems.length > 0 && \n                    <div>\n                        <ul>\n                            {cartItems.map(item =>\n                                <li>\n                                    <b>{item.title}</b>\n                                        \n                                    <button className=\"btn btn-success text-warning\"\n                                    onClick={(e) =>this.props.handleRemoveFromCart(e,item)}\n                                    >X</button>\n                                </li>)}\n                                \n\n                        </ul>\n                        \n                        <div className=\"col-md-2\" > \n                                <button className=\"btn btn-warning\">CheckOut</button>\n                        </div>\n\n                    </div>\n                \n                }\n            </div>\n            \n        )\n    }\n}\n","import React,{Component } from 'react';\nimport './App.css';\nimport Products from './components/Products';\nimport Filter from './components/Filter';\nimport Basket from './components/Basket';\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {products:[],filteredProducts: [],cartItems:[]};\n    this.handleChangeSort=this.handleChangeSort.bind(this);\n    this.handleChangeSize=this.handleChangeSize.bind(this);\n    this.handleAddToCart=this.handleAddToCart.bind(this);\n    this.handleRemoveFromCart=this.handleRemoveFromCart.bind(this);\n\n\n  }\n  componentWillMount(){\n\n    fetch(\"http://localhost:8000/products\").then(res => res.json())\n    .then(data => this.setState({\n      products: data,\n      filteredProducts: data\n    }));\n    if(localStorage.getItem('cartItems')){\n      this.setState({cartItems: JSON.parse(localStorage.getItem('cartItems'))});\n    }\n  }\n  handleChangeSort(e){\n    this.setState({sort: e.target.value});\n    this.listProducts();\n  }\n  handleChangeSize(e){\n    this.setState({size: e.target.value});\n    this.listProducts();\n  }\n  handleRemoveFromCart(e,item){\n    this.setState(state=>{\n      const cartItems= state.cartItems.filter(elm => elm.id!== item.id);\n      localStorage.setItem('cartItem',cartItems);\n      return {cartItems};\n    });\n\n  }\n\n  listProducts(){\n    this.setState(state => {\n      if(state.sort !== ''){\n        state.products.sort((a,b)=>(state.sort==='lowest')? (a.price > b.price?1:-1): (a.price < b.price?1:-1));\n        }else {\n          state.products.sort((a,b)=> (a.id < b.id?1:-1));\n        }\n\n        if (state.size!==''){\n          return {filteredProducts: state.products.filter(a=> \n            a.availableSizes.indexOf(state.size.toUpperCase()) >= 0\n          \n            )}\n        }\n\n              return {filteredProducts: this.state.products};\n\n      })\n  }\n  handleAddToCart(e,product){\n    this.setState(state=>{\n      const cartItems= state.cartItems;\n      let productAlreadyInCart = false; \n      cartItems.forEach(item => {\n        if(item.id === product.id){\n        productAlreadyInCart = true; \n       }\n       item.count = (item.count + 0.5);\n       \n\n      });\n      if(!productAlreadyInCart){\n        cartItems.push({...product, count:1});\n      }\n      localStorage.setItem(\"cartItems\",JSON.stringify(cartItems));\n      return cartItems; \n    })\n  }\n  render(){\n  return (\n    <div className=\"container\">\n      <h1>Deportes Direct shopping App</h1>\n      <hr/>\n      <div className=\"row\"> \n        <div className=\"col-md-8\">\n        <Filter size={this.state.size} sort={this.state.sort} handleChangeSize={this.handleChangeSize}\n          handleChangeSort={this.handleChangeSort} count={this.state.filteredProducts.length}/>\n          <hr/>\n          <Products products={this.state.filteredProducts} handleAddToCart={this.handleAddToCart}/>\n        </div>\n        <div className=\"col-md-4\">\n        <Basket cartItems={this.state.cartItems} handleRemoveFromCart={this.handleRemoveFromCart} />          \n        </div>\n      </div> \n      \n    </div>\n  );\n }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}